# This is a generated file, don't edit

extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.4"
    import: ["@extends", "@external", "@key"]
  )

type CannotRegisterPetRejection implements Rejection {
  message: String!
}

type InternalErrorRejection implements Rejection {
  message: String!
}

type Mutation {
  registerPet(input: RegisterPetInput!): RegisterPetPayload!
  suspendPet(input: SuspendPetInput!): SuspendPetPayload!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Pet @key(fields: "id") {
  id: ID!
  type: PetType!
  ownerId: ID!
  description: String
  statusInfo: PetStatusInfo!
}

type PetActiveStatusInfo implements PetStatusInfo {
  status: PetStatus!
}

type PetConnection {
  pageInfo: PageInfo!
  edges: [PetEdge!]!
  totalCount: Int!
}

type PetEdge {
  node: Pet!
  cursor: String!
}

enum PetStatus {
  Active
  Suspended
}

interface PetStatusInfo {
  status: PetStatus!
}

type PetSuspendInvalidStatusRejection implements Rejection {
  message: String!
}

type PetSuspendedStatusInfo implements PetStatusInfo {
  status: PetStatus!
  suspensionReasion: String
}

enum PetType {
  Cat
  Dog
  Giraffe
}

type Query {
  pet(id: ID!): Pet
}

input RegisterPetInput {
  description: String
  type: PetType!
}

union RegisterPetPayload =
  | UnauthorizedRejection
  | CannotRegisterPetRejection
  | ValidationRejection
  | InternalErrorRejection
  | RegisterPetSuccessPayload

type RegisterPetSuccessPayload {
  pet: Pet!
}

interface Rejection {
  message: String!
}

input SuspendPetInput {
  id: ID!
  suspensionReason: String
}

union SuspendPetPayload =
  | UnauthorizedRejection
  | PetSuspendInvalidStatusRejection
  | ValidationRejection
  | InternalErrorRejection
  | SuspendPetSuccessPayload

type SuspendPetSuccessPayload {
  pet: Pet!
}

type UnauthorizedRejection implements Rejection {
  message: String!
}

type User @key(fields: "id") @extends {
  id: ID! @external
  pets(
    before: String
    after: String
    first: Int
    last: Int
    types: [PetType!]
  ): PetConnection!
}

type ValidationFieldError {
  message: String
  path: [String!]
}

type ValidationRejection implements Rejection {
  message: String!
  fields: [ValidationFieldError!]
}
